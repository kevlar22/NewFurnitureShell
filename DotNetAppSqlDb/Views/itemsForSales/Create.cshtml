
@model DotNetAppSqlDb.Models.itemsForSale
@{ Layout = "~/Views/Shared/_Layout.cshtml "; }
@{ ViewBag.Title = "Create"; }
@{ WebImage photo = null;
    var newFileName = "";
    var imagePath = "";

    if (IsPost)
    {
        photo = WebImage.GetImageFromRequest();
        if (photo != null)
        {
            newFileName = Guid.NewGuid().ToString() + "_" +
                Path.GetFileName(photo.FileName);
            imagePath = @"images\" + newFileName;

            photo.Save(@"~\" + imagePath);
        }
    }
}

<body>
    @using (Html.BeginForm("Create", "itemsForSales", null, FormMethod.Post,
                              new { enctype = "multipart/form-data" }))


    {
        @Html.AntiForgeryToken()


        <div class="form-horizontal">
            <fieldset>
                <h4>itemsForSale</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group">
                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.image)
                    </div>

                    <div class="editor-field">
                        <input id="ImagePath" title="Upload a product image"
                               type="file" name="file" />
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.category, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </fieldset>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</body>